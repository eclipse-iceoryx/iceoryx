# Copyright (c) 2022 - 2023 by Apex.AI Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

load("@rules_cc//cc:defs.bzl", "cc_library")
load("//bazel:configure_file.bzl", "configure_file")

configure_file(
    name = "iceoryx_hoofs_deployment_hpp",
    src = "cmake/iceoryx_hoofs_deployment.hpp.in",
    out = "generated/include/iox/iceoryx_hoofs_deployment.hpp",
    config_constants = {
        "IOX_MAX_NAMED_PIPE_MESSAGE_SIZE": "4096",
        "IOX_MAX_NAMED_PIPE_NUMBER_OF_MESSAGES": "10",
        # FIXME: for values see "iceoryx_hoofs/cmake/IceoryxHoofsDeployment.cmake" ... for now some nice defaults
        "IOX_MINIMAL_LOG_LEVEL": "Trace",
    },
)

cc_library(
    name = "iceoryx_hoofs",
    srcs = glob(
        [
            "**/*.cpp",
            "**/*.inl",
        ],
        exclude = ["testing/**/*"],
    ),
    hdrs = glob(["**/*.hpp"]) + [":iceoryx_hoofs_deployment_hpp"],
    includes = [
        "buffer/include/",
        "cli/include/",
        "concurrent/buffer/include/",
        "concurrent/sync/include/",
        "container/include/",
        "design/include",
        "filesystem/include",
        "functional/include",
        "generated/include",
        "legacy/include/",
        "memory/include/",
        "posix/auth/include/",
        "posix/design/include/",
        "posix/filesystem/include/",
        "posix/ipc/include/",
        "posix/sync/include/",
        "posix/time/include/",
        "posix/utility/include/",
        "posix/vocabulary/include/",
        "primitives/include/",
        "reporting/include/",
        "time/include/",
        "utility/include/",
        "vocabulary/include/",
    ],
    linkopts = select({
        "//iceoryx_platform:linux-clang": [
            "-latomic",
        ],
        "//iceoryx_platform:linux-gcc": [],
        "//iceoryx_platform:mac": [],
        "//iceoryx_platform:qnx": [],
        "//iceoryx_platform:unix": [],
        "//iceoryx_platform:win": [],
        "//conditions:default": [],
    }),
    visibility = ["//visibility:public"],
    deps = ["//iceoryx_platform"],
)

cc_library(
    name = "iceoryx_hoofs_testing",
    srcs = glob(["testing/**/*.cpp"]),
    hdrs = glob(["testing/include/**"]),
    strip_include_prefix = "testing/include",
    visibility = ["//visibility:public"],
    deps = [
        ":iceoryx_hoofs",
        "@googletest//:gtest",
    ],
)
